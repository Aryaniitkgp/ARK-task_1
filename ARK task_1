import cv2
import numpy as np
import matplotlib.pyplot as plt


left_path = r"C:\Users\aryan\Downloads\ark task 1\left.png"
right_path = r"C:\Users\aryan\Downloads\ark task 1\right.png"

left_img = cv2.imread(left_path, cv2.IMREAD_GRAYSCALE)
right_img = cv2.imread(right_path, cv2.IMREAD_GRAYSCALE)

if left_img is None or right_img is None:
    raise ValueError("One or both images could not be loaded.")


if left_img.shape != right_img.shape:
    raise ValueError("Left and Right images must have the same dimensions!")


window_size = 5 
max_disparity = 32  

height, width = left_img.shape
disparity_map = np.zeros((height, width), dtype=np.float32)

for y in range(window_size, height - window_size):
    for x in range(window_size, width - window_size):
        max_offset = 0
        min_SAD = float('inf')

       
        left_patch = left_img[y - window_size:y + window_size + 1, x - window_size:x + window_size + 1]

        for d in range(min(max_disparity, x - window_size)):  
            x_right = x - d  
            right_patch = right_img[y - window_size:y + window_size + 1, x_right - window_size:x_right + window_size + 1]

            if right_patch.shape != left_patch.shape:  
                continue

            sad = np.sum(np.abs(left_patch.astype(np.float32) - right_patch.astype(np.float32)))

            if sad < min_SAD:
                min_SAD = sad
                max_offset = d

        disparity_map[y, x] = max_offset  

disparity_map = cv2.normalize(disparity_map, None, 0, 255, cv2.NORM_MINMAX, cv2.CV_8U)

heatmap = cv2.applyColorMap(disparity_map, cv2.COLORMAP_JET)

plt.imshow(cv2.cvtColor(heatmap, cv2.COLOR_BGR2RGB))
plt.title("Depth Heatmap (Custom Disparity)")
plt.axis("off")
plt.show()
